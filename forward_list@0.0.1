#include <iostream>
#include <string>
#include <sstream>
using namespace std;

bool read(char &op, int &value)
{
	bool error = false;
		string string;
		getline(cin, string);
		istringstream stream(string);
		if (stream >> op) {
		if (op=='+' && stream >> value) {
		    error = true;
		}
		else if (op=='-' || op=='/' || op=='=' || op=='q') {
		error = true;
		}
		else cerr << "An error has occured while reading input data\n";return error;
		}
	return error;
}

int count = 0;
struct node_t {
    int value;
    node_t * next;
};

void add(node_t * & head, int value) {
    node_t * node = new node_t;
    node->value = value;
    node->next = nullptr;
    if( head == nullptr) {
        head = node;
    }
    else {
        node_t * last = head;
        while(last->next) {
            last = last->next;
        }
        last->next = node;
    }
    count++;
}

void away(node_t * & list) {
    node_t * first = list;
    list = list->next;
    delete first;
    count--;
}

void reverse(node_t * list) {
    node_t * begin = list;
    node_t * last = begin;
    for (int j = 0; j < count / 2 ; j++) {
        for (int i = j; i < count - 1 - j; i++) {
            last = last->next;
        }
        int saved = begin->value;
        begin->value = last->value;
        last->value = saved;
        begin = begin->next;
        last = begin;
    }
}

void print(node_t * first, int count) {
    node_t *print = first;
    for (int i = 0; i < count; i++) {
        cout << "+---+    ";
    }
    cout << endl;
    for (int i = 0; i < count; i++) {
        if (i != 0) {
            cout << "--->";
        }
        cout << "| " << print->value << " |";
        print = print->next;
    }
    cout << endl;
    for (int i = 0; i < count; i++) {
        cout << "+---+    ";
    }
    cout << endl;
}
void delet(node_t * head) {
    while(head) {
        delete head;
        head = head->next;
    }
}
int main()
{
    int value;
    char op;
    node_t * head = nullptr;
    while(read (op, value)) {
        switch (op) {
            case '+' : {
                add(head, value);
                print(head, count);
                break;
            };
            case '-' : {
                away(head);
                print(head, count);
                break;
            };
            case 'q' : {
                exit(0);
            };
            case '=' : {
                print(head, count);
                break;
            };
            case '/' : {
                reverse(head);
                print(head, count);
                break;
            };
        }
    }
    delet(head);
}

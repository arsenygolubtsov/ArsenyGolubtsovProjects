#include <iostream>
using namespace std;

void show_game (char *array){
	cout << "    1   2   3" << endl;
	cout << "  +---+---+---+" << endl;
	for (unsigned int i=0; i<9; i++){
		if (i==3 || i==6) cout << endl << "  +---+---+---+" << endl;
		if(i==0) {
			cout << "a | ";
		}
		if(i==3) {
			cout << "b | ";
		}
		if(i==6) {
			cout << "c | ";
		}
		if (array[i]=='X' || array[i]=='O') {
			cout << array[i] << " | ";
		}
		else cout << "  | ";
	}
	cout << endl << "  +---+---+---+" << endl;
}

void show_available_moves (char *array, char op){
	unsigned int k=0;
	for(unsigned int i=0; i<9; i++){
		if (!(array[i]=='X' || array[i]=='O')) {
			if (i<3) {
				cout << ++k << ". mark cell a" << i+1 << " as " << op << endl;
			}
			if (i>2 && i<6) {
				cout << ++k << ". mark cell b" << i-2 << " as " << op << endl;
			}
			if (i>5) {
				cout << ++k << ". mark cell c" << i-5 << " as " << op << endl;
			}
		}
	}
	cout << ++k << ". quit" << endl;
}

bool making_move (char *array, short move, char op){
	switch (move){
		case 1:{
			for (unsigned int i=0; i<9; i++){
				if (!(array[i]=='X' || array[i]=='O')){
					array[i]=op;
					return true;
				}
			}
			break;
		}
		case 2:{
			unsigned int k=0;
			for (unsigned int i=0; i<9; i++){
				if (!(array[i]=='X' || array[i]=='O')){
					k++;
				}
				if (k==2){
					array[i]=op;
					return true;
				}
			}
			break;
		}
		case 3:{
			unsigned int k=0;
			for (unsigned int i=0; i<9; i++){
				if (!(array[i]=='X' || array[i]=='O')){
					k++;
				}
				if (!(array[i]=='X' || array[i]=='O') && k==3){
					array[i]=op;
					return true;
				}
			}
			break;
		}
		case 4:{
			unsigned int k=0;
			for (unsigned int i=0; i<9; i++){
				if (!(array[i]=='X' || array[i]=='O')){
					k++;
				}
				if (!(array[i]=='X' || array[i]=='O') && k==4){
					array[i]=op;
					return true;
				}
			}
			break;
		}
		case 5:{
			unsigned int k=0;
			for (unsigned int i=0; i<9; i++){
				if (!(array[i]=='X' || array[i]=='O')){
					k++;
				}
				if (!(array[i]=='X' || array[i]=='O') && k==5){
					array[i]=op;
					return true;
				}
			}
			break;
		}
		case 6:{
			unsigned int k=0;
			for (unsigned int i=0; i<9; i++){
				if (!(array[i]=='X' || array[i]=='O')){
					k++;
				}
				if (!(array[i]=='X' || array[i]=='O') && k==6){
					array[i]=op;
					return true;
				}
			}
			break;
		}
		case 7:{
			unsigned int k=0;
			for (unsigned int i=0; i<9; i++){
				if (!(array[i]=='X' || array[i]=='O')){
					k++;
				}
				if (!(array[i]=='X' || array[i]=='O') && k==7){
					array[i]=op;
					return true;
				}
			}
			break;
		}
		case 8:{
			unsigned int k=0;
			for (unsigned int i=0; i<9; i++){
				if (!(array[i]=='X' || array[i]=='O')){
					k++;
				}
				if (!(array[i]=='X' || array[i]=='O') && k==8){
					array[i]=op;
					return true;
				}
			}
			break;
		}
		case 9:{
			unsigned int k=0;
			for (unsigned int i=0; i<9; i++){
				if (!(array[i]=='X' || array[i]=='O')){
					k++;
				}
				if (!(array[i]=='X' || array[i]=='O') && k==9){
					array[i]=op;
					return true;
				}
			}
			break;
		}
	}
	return false;
}

bool win_game(char* array){
	for (unsigned i=0; i<3; i++){
		if ((array[i]=='X' || array[i]=='O') && array[i]==array[i+3] && array[i]==array[i+6]) return true;
	}
	for (unsigned i=0; i<9; i+=3){
		if ((array[i]=='X' || array[i]=='O') && array[i]==array[i+1] && array[i]==array[i+2]) return true;
	}
	if ((array[0]=='X' || array[0]=='O' || array[2]=='X' || array[2]=='O') && array[0]==array[4] && array[0]==array[8] || array[2]==array[4] && array[2]==array[6]) return true;
	return false;
}

bool proverka(char* array){
	unsigned int k=0;
	for (unsigned int i=0; i<9; i++){
		if (!(array[i]=='X' || array[i]=='O')){
			k++;
		}
		if (k>0) return true;

	}
	return false;
}

int main (){
	unsigned int i=0;
	char array[9];
	char op;
	short move;
	bool ok=true, letter=true;
	
	show_game(array);
	
	while(proverka(array)) {
		if(letter==true) op='X';
		else op='O';
		show_available_moves (array, op);
		cin >> move;
		while (move<1 || move>(10-i)){
			cout << endl << "You can`t use this number, please, try again: ";
			cin >> move;
		}
		ok=making_move (array, move, op);
		if (ok!=true) break;
		show_game(array);
		if (win_game(array)) {
			cout << endl << "player " << op << " wonn ";
			cin.get();
			return 0;
		}
		letter=!letter;
		i++;
	}
}
